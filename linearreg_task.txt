import numpy as np

import matplotlib.pyplot as plt

from sklearn.linear_model import LinearRegression

import pandas as pd



# Given data

V_GS = np.array([1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0]).reshape(-1, 1)

I_d = np.array([0.734, 0.886, 1.04, 1.19, 1.35, 1.50, 1.66, 1.81, 1.97, 2.12])



# Perform linear regression

model = LinearRegression()

model.fit(V_GS, I_d)



# Get slope (m) and intercept (c)

m = model.coef_[0]

c = model.intercept_

print(f"Linear Regression Equation: I_d = {m:.4f} * V_GS + {c:.4f}")



# Predict values using the model

I_d_pred = model.predict(V_GS)



# (b) Plot actual data and regression line

plt.scatter(V_GS, I_d, color='red', label="Actual Data")

plt.plot(V_GS, I_d_pred, color='blue', label="Regression Line")

plt.xlabel("Gate-to-Source Voltage (V_GS) [V]")

plt.ylabel("Drain Current (I_d) [mA]")

plt.title("Linear Regression for MOS Transistor")

plt.legend()

plt.grid()

plt.show()



# (c) Compute errors

errors = I_d - I_d_pred

df_results = pd.DataFrame({

    "V_GS (V)": V_GS.flatten(),

    "Actual I_d (mA)": I_d,

    "Predicted I_d (mA)": I_d_pred,

    "Error (mA)": errors

})



print("\nError Table:")

print(df_results.to_string(index=False))